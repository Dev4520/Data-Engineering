# Data-Engineering

1. Data set download from -> https://github.com/shashank-mishra219/Hive-Class/blob/main/sales_order_data.csv
-> laoded data to LFS
HC- ls /home/cloudera/shekhar
  - sales_order_data.csv
2. Data loaded from LFS to HDFS
HC- hadoop fs -put /home/cloudera/shekhar/sales_data.csv /shekhar
HC- hadoop fs -ls /shekhar
  -  /shekhar/sales_data.csv
3. creatig data base on hive
HC- create database;
HC- show databases;
  - hive_class_assignment_1
  
# create table of sales_data_csv
HC- create table sales_data_csv
(
ORDERNUMBER int,
QUANTITYORDERED int,
PRICEEACH float,
ORDERLINENUMBER int,
SALES float,
STATUS string,
QTR_ID int,
MONTH_ID int,
YEAR_ID int,
PRODUCTLINE string,
MSRP int,
PRODUCTCODE string,
PHONE string,
CITY string,
STATE string,
POSTALCODE string,
COUNTRY string,
TERRITORY string,
CONTACTLASTNAME string,
CONTACTFIRSTNAME string,
DEALSIZE string
)
row format delimited
fields terminated by ','
tblproperties("skip.header.line.count"="1");

4. To load data from HDFS to hive table sales_data_csv:-
HC- load data inpath '/shekhar/sales_data.csv' into table sales_data_csv;

# To see table schema
HC- describe sales_data_csv;.

# To see table in detail:-
HC- describe formatted sales_data_csv;
  hdfs://quickstart.cloudera:8020/user/hive/warehouse/hive_class_assignment_1.db/sales_data_csv	
  
# To see table data in detail:-
HC- select * from sales_data_csv limit 5;

# To see the metadata:-
HC- describe extended sales_data_csv;

5. Create orc table in hive sales_data_orc:-
HC- create table sales_data_orc
(
ORDERNUMBER int,
QUANTITYORDERED int,
PRICEEACH float,
ORDERLINENUMBER int,
SALES float,
STATUS string,
QTR_ID int,
MONTH_ID int,
YEAR_ID int,
PRODUCTLINE string,
MSRP int,
PRODUCTCODE string,
PHONE string,
CITY string,
STATE string,
POSTALCODE string,
COUNTRY string,
TERRITORY string,
CONTACTLASTNAME string,
CONTACTFIRSTNAME string,
DEALSIZE string
)
stoted as orc;


4. To load data from table sales_data_csv to hive table sales_data_orc:-
HC- insert data sales_data_orc select * from sales_data_csv;

# To see table schema
HC- describe sales_data_orc;.

# To see table in detail:-
HC- describe formatted sales_data_csv;
  hdfs://quickstart.cloudera:8020/user/hive/warehouse/hive_class_assignment_1.db/sales_data_orc	
  
# To see table data in detail:-
HC- select * from sales_data_orc limit 5;

# To see the metadata:-
HC- describe extended sales_data_orc

7. Perform below menioned queries on "sales_order_orc" table :

a. calculate total sales per year:-
HC- select year_id, sum(sales) as total_sales from sales_data_orc group by year_id;
  -  set hive.exec.reducers.bytes.per.reducer=<number>
     In order to limit the maximum number of reducers:
     set hive.exec.reducers.max=<number>
     In order to set a constant number of reducers:
     set mapreduce.job.reduces=<number>
 
 - mappers: 1; reducers: 1;
 
 - year_id	total_sales
    2003	  3516979.547241211
    2004	  4724162.593383789
    2005	  1791486.7086791992

b. Find a product for which maximum orders were placed
   - select orderlinenumber, max(productline) as max_order from sales_data_csv group by orderlinenumber;
   o/p:-1	Vintage Cars
        2	Vintage Cars
        3	Vintage Cars
        4	Vintage Cars
        5	Vintage Cars
        6	Vintage Cars
        7	Vintage Cars
        8	Vintage Cars
        9	Vintage Cars
        10	Vintage Cars
        11	Vintage Cars
        12	Vintage Cars
        13	Vintage Cars
        14	Vintage Cars
        15	Vintage Cars
        16	Vintage Cars
        17	Vintage Cars
        18	Vintage Cars
        Time taken: 46.1 seconds, Fetched: 18 row(s)

c. Calculate the total sales for each quarter
   - select qtr_id, sum(sales) as total_sales from sales_data_csv group by qtr_id;
   o/p:- qtr_id   total_sales
          1	     2350817.726501465
          2	     2048120.3029174805
          3	     1758910.808959961
          4	     3874780.010925293
          Time taken: 38.961 seconds, Fetched: 4 row(s)

d. In which quarter sales was minimum
     - select qtr_id, max(sales) as max_sales_qtr from sales_data_csv group by qtr_id;
    o/p:- qtr_id  max_sales_qtr
          1	       10066.6
          2	       14082.8
          3	       10993.5
          4	       12536.5

e. In which country sales was maximum and in which country sales was minimum
   - select country, max(sales) as max_sales from sales_data_csv group by country;
   o/p:-  country     max_sale
          Australia	  9774.03
          Austria	    9240.0
          Belgium	    6804.63
          Canada	    9064.89
          Denmark	    10468.9
          Finland	    10606.2
          France	    11739.7
          Germany	    8940.96
          Ireland	    8258.0
          Italy	      9160.36
          Japan	      10758.0
          Norway	    8844.12
          Philippines	7483.98
          Singapore	  10993.5
          Spain	      12001.0
          Sweden	    7209.11
          Switzerland	6761.6
          UK	        11886.6
          USA	        14082.8
          Time taken: 45.853 seconds, Fetched: 19 row(s)

         - select country, min(sales) as sales_min from sales_daa_csv group by country;
         o/p:-  country     min_sales
                Australia	  652.35
                Austria	    640.05
                Belgium	    881.4
                Canada	    1119.93
                Denmark	    1146.5
                Finland	    891.03
                France	    482.13
                Germany	    948.99
                Ireland	    1056.4
                Italy	      577.6
                Japan	      553.95
                Norway	    1129.04
                Philippines	1173.15
                Singapore	  785.64
                Spain	      683.8
                Sweden	    1467.48
                Switzerland	1205.04
                UK	        710.2
                USA	        541.14
         
f. Calculate quartelry sales for each city
    - select city, sum(sales) as city_sales from sales_data_csv group by city;
    o/p:- 
            Aaarhus	100595.5498046875
            Allentown	122138.13995361328
            Barcelona	78411.86022949219
            Bergamo	137955.7201538086
            Bergen	111640.27990722656
            Boras	134259.33056640625
            Boston	154069.66052246094
            Brickhaven	165255.19982910156
            Bridgewater	101894.79113769531
            Brisbane	50218.50988769531
            Bruxelles	74972.51928710938
            Burbank	46084.63952636719
            Burlingame	120783.07043457031
            Cambridge	139243.99932861328
            Charleroi	33440.100341796875
            Chatswood	151570.97985839844
            Cowes	78240.83984375
            Dublin	57756.43029785156
            Espoo	113961.15087890625
            Frankfurt	85171.58947753906
            Gensve	117713.55859375
            Glen Waverly	64591.45947265625
            Glendale	66423.76971435547
            Graz	52263.900146484375
            Helsinki	111250.37878417969
            Kobenhavn	145041.60083007812
            Koln	100306.58020019531
            Las Vegas	82751.07922363281
            Lille	69052.41076660156
            Liverpool	118008.26965332031
            London	124823.53979492188
            Los Angeles	48048.460205078125
            Lule	75754.87963867188
            Lyon	142874.25
            Madrid	1082551.440979004
            Makati City	94015.73046875
            Manchester	157807.80963134766
            Marseille	74936.14001464844
            Melbourne	200995.41015625
            Minato-ku	120562.74029541016
            Montreal	74204.79052734375
            Munich	34993.92004394531
            NYC	560787.7692871094
            Nantes	204304.85968017578
            Nashua	131685.29949951172
            New Bedford	207874.85864257812
            New Haven	79472.0703125
            Newark	83228.18920898438
            North Sydney	153996.12915039062
            Osaka	67605.0703125
            Oslo	79224.22998046875
            Oulu	104370.38067626953
            Paris	268944.6802368164
            Pasadena	104561.95928955078
            Philadelphia	151189.13110351562
            Reggio Emilia	142601.3309326172
            Reims	135042.94012451172
            Salzburg	149798.63018798828
            San Diego	87489.23010253906
            San Francisco	224358.6805419922
            San Jose	160010.27026367188
            San Rafael	654858.0581054688
            Sevilla	54723.621154785156
            Singapore	288488.4102783203
            South Brisbane	59469.1201171875
            Stavern	116599.18981933594
            Strasbourg	80438.47985839844
            Torino	94117.25988769531
            Toulouse	70488.44091796875
            Tsawassen	74634.84985351562
            Vancouver	75238.91955566406
            Versailles	64834.32019042969
    White Plains	85555.98962402344
    Time taken: 93.766 seconds, Fetched: 73 row(s)

    
h. Find a month for each year in which maximum number of quantities were sold
    - select year_id,month_id, max(sales) as max_sales from sales_data_csv group by year_id,month_id;
    o/p:- year_id month_id max_sale
          2003	     1	   5958.5
          2003	     2	   8690.36
          2003	     3     8257.0
          2003	     4	   9264.86
          2003	     5	   8284.0
          2003	     6	   11279.2
          2003	     7	   8331.61
          2003	     8	   9470.94
          2003	     9	   10993.5
          2003	     10	   8754.69
          2003	     11	   8892.9
          2003	     12	   9064.89
          2004	     1	   9534.5
          2004	     2	   9774.03
          2004	     3	   8378.58
          2004	     4	   7597.3
          2004	     5	   10606.2
          2004	     6	   8336.94
          2004	     7	   9169.0
          2004	     8	   9631.0
          2004	     9	   8411.56
          2004	    10	   11623.7
          2004	    11	   12536.5
          2004	    12	   9720.0
          2005	    1	     9240.44
          2005	    2	     10039.6
          2005	    3	     10066.6
          2005	    4	     14082.8
          2005	    5	     12001.0
          Time taken: 42.475 seconds, Fetched: 29 row(s)



